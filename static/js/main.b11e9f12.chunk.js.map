{"version":3,"sources":["App.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","microapp","MicroApp","id","audience","state","feedback","showDetail","bind","assertThisInitialized","hideDetail","getToken","_this2","setState","setTimeout","initialize","onError","console","log","url","concat","window","location","origin","title","_this3","asyncToGenerator","regenerator_default","a","mark","_callee","token","wrap","_context","prev","next","sent","length","stop","react_default","createElement","className","href","target","rel","onClick","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"iTAoGeA,cA9Fb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,SAAW,IAAIC,IAAS,CAC3BC,GAAI,mBACJC,SAAU,qBAGZV,EAAKW,MAAQ,CACXC,SAAU,IAGZZ,EAAKa,WAAab,EAAKa,WAAWC,KAAhBb,OAAAc,EAAA,EAAAd,CAAAD,IAClBA,EAAKgB,WAAahB,EAAKgB,WAAWF,KAAhBb,OAAAc,EAAA,EAAAd,CAAAD,IAClBA,EAAKiB,SAAWjB,EAAKiB,SAASH,KAAdb,OAAAc,EAAA,EAAAd,CAAAD,IAdJA,mFAiBM,IAAAkB,EAAAf,KAGlBA,KAAKgB,SAAS,CACZP,SAAU,wBAEZQ,WAAW,WACTF,EAAKX,SAASc,WAAW,CACvBC,QAASC,QAAQC,OAElB,KAGHrB,KAAKgB,SAAS,CACZP,SAAU,qDAcZT,KAAKI,SAASM,WAAW,CAAEY,IAAG,GAAAC,OAAKC,OAAOC,SAASC,OAArB,eAA0CC,MAAO,mBAE/E3B,KAAKgB,SAAS,CACZP,SAAU,0DAKZT,KAAKI,SAASS,aACdb,KAAKgB,SAAS,CACZP,SAAU,qDAIH,IAAAmB,EAAA5B,KACTA,KAAKgB,SAAS,CACZP,SAAU,wBAEZQ,WAAUnB,OAAA+B,EAAA,EAAA/B,CAAAgC,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACWV,EAAKxB,SAASU,WADzB,OACHoB,EADGE,EAAAG,KAETX,EAAKZ,SAAS,CACZP,SAAQ,aAAAc,OAAeW,EAAMM,UAHtB,wBAAAJ,EAAAK,SAAAR,MAKR,sCAGI,IACCxB,EAAaT,KAAKQ,MAAlBC,SACR,OACEiC,EAAAX,EAAAY,cAAA,OAAKC,UAAU,OAEbF,EAAAX,EAAAY,cAAA,WAAMlC,GACNiC,EAAAX,EAAAY,cAAA,KAAGE,KAAK,wCAA8BC,OAAO,SAASC,IAAI,uBAA1D,iBAGAL,EAAAX,EAAAY,cAAA,WACAD,EAAAX,EAAAY,cAAA,KAAGE,KAAK,qBAAqBC,OAAO,QAApC,gBAGAJ,EAAAX,EAAAY,cAAA,OAAKC,UAAU,aACbF,EAAAX,EAAAY,cAAA,UAAQK,QAAShD,KAAKU,YAAtB,eACAgC,EAAAX,EAAAY,cAAA,UAAQK,QAAShD,KAAKa,YAAtB,eACA6B,EAAAX,EAAAY,cAAA,UAAQK,QAAShD,KAAKc,UAAtB,sBAxFQmC,aCMlBC,IAASC,OAAOT,EAAAX,EAAAY,cAACS,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b11e9f12.chunk.js","sourcesContent":["import React, { Component } from 'react'\n// import logo from './Blue-On-White-Logo.svg'\n// import './App.css'\nimport MicroApp from '@workgrid/micro-app'\n\nclass App extends Component {\n  constructor() {\n    super()\n    // Create a new instance of a MicroApp\n    this.microapp = new MicroApp({\n      id: 'example-microapp',\n      audience: 'example-microapp'\n    })\n\n    this.state = {\n      feedback: ''\n    }\n\n    this.showDetail = this.showDetail.bind(this)\n    this.hideDetail = this.hideDetail.bind(this)\n    this.getToken = this.getToken.bind(this)\n  }\n\n  componentDidMount() {\n    // As soon as possible and once, tell Workgrid that you are ready\n    // I put it in the did mount since that means we are ready to roll\n    this.setState({\n      feedback: 'Starting initialize'\n    })\n    setTimeout(() => {\n      this.microapp.initialize({\n        onError: console.log\n      })\n    }, 1000)\n    // console.log('What is my postmessage? ', window.ReactNativeWebView)\n\n    this.setState({\n      feedback: 'Initialized'\n    })\n\n    // setTimeout(() => {\n    //   this.microapp.emit({ type: 'setSize', payload: { height: 400 } })\n    // }, 5000)\n  }\n\n  showDetail() {\n    // Show detail by calling the .showDetail() on the microapp\n    // The URL should be another microapp ready webpage, showing\n    // standard webpages is not supported at this time\n\n    // In this example I'm just showing summary again\n    this.microapp.showDetail({ url: `${window.location.origin}/index.html`, title: 'Starter Detail' })\n\n    this.setState({\n      feedback: 'Show Detail Sent'\n    })\n  }\n\n  hideDetail() {\n    this.microapp.hideDetail()\n    this.setState({\n      feedback: 'Detail hidden'\n    })\n  }\n\n  getToken() {\n    this.setState({\n      feedback: 'Asking for Token...'\n    })\n    setTimeout(async () => {\n      const token = await this.microapp.getToken()\n      this.setState({\n        feedback: `Got Token ${token.length}`\n      })\n    }, 1000)\n  }\n\n  render() {\n    const { feedback } = this.state\n    return (\n      <div className=\"App\">\n        {/* <img className=\"Logo\" src={logo} alt=\"Workgrid Logo\" /> */}\n        <pre>{feedback}</pre>\n        <a href=\"https://www.google.com?q=ðŸ¤ª\" target=\"_blank\" rel=\"noopener noreferrer\">\n          See Something\n        </a>\n        <br />\n        <a href=\"tel:1-715-570-2543\" target=\"_top\">\n          Call Someone\n        </a>\n        <div className=\"ActionBar\">\n          <button onClick={this.showDetail}>Show Detail</button>\n          <button onClick={this.hideDetail}>Hide Detail</button>\n          <button onClick={this.getToken}>Get Token</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// Polyfills for IE11 needed for the Micro App SDK\nimport 'core-js/es6/promise'\nimport 'core-js/fn/object/assign'\nimport 'core-js/fn/array/includes'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n// import * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}