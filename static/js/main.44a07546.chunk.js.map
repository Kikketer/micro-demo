{"version":3,"sources":["Blue-On-White-Logo.svg","App.js","index.js"],"names":["module","exports","__webpack_require__","p","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","microapp","MicroApp","id","audience","state","feedback","showDetail","bind","assertThisInitialized","hideDetail","getToken","initialize","setState","url","concat","window","location","origin","pathname","title","token","length","react_default","a","createElement","className","src","logo","alt","onClick","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sVCgFzBC,cA1Eb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,SAAW,IAAIC,IAAS,CAC3BC,GAAI,mBACJC,SAAU,qBAGZV,EAAKW,MAAQ,CACXC,SAAU,IAGZZ,EAAKa,WAAab,EAAKa,WAAWC,KAAhBb,OAAAc,EAAA,EAAAd,CAAAD,IAClBA,EAAKgB,WAAahB,EAAKgB,WAAWF,KAAhBb,OAAAc,EAAA,EAAAd,CAAAD,IAClBA,EAAKiB,SAAWjB,EAAKiB,SAASH,KAAdb,OAAAc,EAAA,EAAAd,CAAAD,IAdJA,mFAoBZG,KAAKI,SAASW,aAEdf,KAAKgB,SAAS,CACZP,SAAU,qDAUZT,KAAKI,SAASM,WAAW,CAAEO,IAAG,GAAAC,OAAKC,OAAOC,SAASC,QAArBH,OAA8BC,OAAOC,SAASE,UAAYC,MAAO,mBAE/FvB,KAAKgB,SAAS,CACZP,SAAU,0DAKZT,KAAKI,SAASS,aACdb,KAAKgB,SAAS,CACZP,SAAU,0KAKZT,KAAKgB,SAAS,CACZP,SAAU,iCAEQT,KAAKI,SAASU,kBAA5BU,SACNxB,KAAKgB,SAAS,CACZP,SAAQ,aAAAS,OAAeM,EAAMC,6IAIxB,IACChB,EAAaT,KAAKQ,MAAlBC,SACR,OACEiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKC,IAAMC,IAAI,kBACrCN,EAAAC,EAAAC,cAAA,WAAMnB,GACNiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAQK,QAASjC,KAAKU,YAAtB,eACAgB,EAAAC,EAAAC,cAAA,UAAQK,QAASjC,KAAKa,YAAtB,eACAa,EAAAC,EAAAC,cAAA,UAAQK,QAASjC,KAAKc,UAAtB,sBApEQoB,aCKlBC,IAASC,OAAOV,EAAAC,EAAAC,cAACS,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.44a07546.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Blue-On-White-Logo.e5d2da3a.svg\";","import React, { Component } from 'react'\nimport logo from './Blue-On-White-Logo.svg'\nimport './App.css'\nimport MicroApp from '@workgrid/micro-app'\n\nclass App extends Component {\n  constructor() {\n    super()\n    // Create a new instance of a MicroApp\n    this.microapp = new MicroApp({\n      id: 'example-microapp',\n      audience: 'example-microapp'\n    })\n\n    this.state = {\n      feedback: ''\n    }\n\n    this.showDetail = this.showDetail.bind(this)\n    this.hideDetail = this.hideDetail.bind(this)\n    this.getToken = this.getToken.bind(this)\n  }\n\n  componentDidMount() {\n    // As soon as possible and once, tell Workgrid that you are ready\n    // I put it in the did mount since that means we are ready to roll\n    this.microapp.initialize()\n\n    this.setState({\n      feedback: 'Initialized'\n    })\n  }\n\n  showDetail() {\n    // Show detail by calling the .showDetail() on the microapp\n    // The URL should be another microapp ready webpage, showing\n    // standard webpages is not supported at this time\n\n    // In this example I'm just showing summary again\n    this.microapp.showDetail({ url: `${window.location.origin}${window.location.pathname}`, title: 'Starter Detail' })\n\n    this.setState({\n      feedback: 'Show Detail Sent'\n    })\n  }\n\n  hideDetail() {\n    this.microapp.hideDetail()\n    this.setState({\n      feedback: 'Detail hidden'\n    })\n  }\n\n  async getToken() {\n    this.setState({\n      feedback: 'Asking for Token...'\n    })\n    const token = await this.microapp.getToken()\n    this.setState({\n      feedback: `Got Token ${token.length}`\n    })\n  }\n\n  render() {\n    const { feedback } = this.state\n    return (\n      <div className=\"App\">\n        <p>This is a public microapp</p>\n        <img className=\"Logo\" src={logo} alt=\"Workgrid Logo\" />\n        <pre>{feedback}</pre>\n        <div className=\"ActionBar\">\n          <button onClick={this.showDetail}>Show Detail</button>\n          <button onClick={this.hideDetail}>Hide Detail</button>\n          <button onClick={this.getToken}>Get Token</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// Polyfills for IE11 needed for the Micro App SDK\nimport 'core-js/es6/promise'\nimport 'core-js/fn/object/assign'\nimport 'core-js/fn/array/includes'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}